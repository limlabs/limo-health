/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MedicationsImport } from './routes/medications'
import { Route as MedicalRecordsImport } from './routes/medical-records'
import { Route as LimoChatImport } from './routes/limo-chat'
import { Route as AppointmentsImport } from './routes/appointments'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const MedicationsRoute = MedicationsImport.update({
  id: '/medications',
  path: '/medications',
  getParentRoute: () => rootRoute,
} as any)

const MedicalRecordsRoute = MedicalRecordsImport.update({
  id: '/medical-records',
  path: '/medical-records',
  getParentRoute: () => rootRoute,
} as any)

const LimoChatRoute = LimoChatImport.update({
  id: '/limo-chat',
  path: '/limo-chat',
  getParentRoute: () => rootRoute,
} as any)

const AppointmentsRoute = AppointmentsImport.update({
  id: '/appointments',
  path: '/appointments',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/appointments': {
      id: '/appointments'
      path: '/appointments'
      fullPath: '/appointments'
      preLoaderRoute: typeof AppointmentsImport
      parentRoute: typeof rootRoute
    }
    '/limo-chat': {
      id: '/limo-chat'
      path: '/limo-chat'
      fullPath: '/limo-chat'
      preLoaderRoute: typeof LimoChatImport
      parentRoute: typeof rootRoute
    }
    '/medical-records': {
      id: '/medical-records'
      path: '/medical-records'
      fullPath: '/medical-records'
      preLoaderRoute: typeof MedicalRecordsImport
      parentRoute: typeof rootRoute
    }
    '/medications': {
      id: '/medications'
      path: '/medications'
      fullPath: '/medications'
      preLoaderRoute: typeof MedicationsImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/appointments': typeof AppointmentsRoute
  '/limo-chat': typeof LimoChatRoute
  '/medical-records': typeof MedicalRecordsRoute
  '/medications': typeof MedicationsRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/appointments': typeof AppointmentsRoute
  '/limo-chat': typeof LimoChatRoute
  '/medical-records': typeof MedicalRecordsRoute
  '/medications': typeof MedicationsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/appointments': typeof AppointmentsRoute
  '/limo-chat': typeof LimoChatRoute
  '/medical-records': typeof MedicalRecordsRoute
  '/medications': typeof MedicationsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/appointments'
    | '/limo-chat'
    | '/medical-records'
    | '/medications'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/appointments' | '/limo-chat' | '/medical-records' | '/medications'
  id:
    | '__root__'
    | '/'
    | '/appointments'
    | '/limo-chat'
    | '/medical-records'
    | '/medications'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppointmentsRoute: typeof AppointmentsRoute
  LimoChatRoute: typeof LimoChatRoute
  MedicalRecordsRoute: typeof MedicalRecordsRoute
  MedicationsRoute: typeof MedicationsRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppointmentsRoute: AppointmentsRoute,
  LimoChatRoute: LimoChatRoute,
  MedicalRecordsRoute: MedicalRecordsRoute,
  MedicationsRoute: MedicationsRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/appointments",
        "/limo-chat",
        "/medical-records",
        "/medications"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/appointments": {
      "filePath": "appointments.tsx"
    },
    "/limo-chat": {
      "filePath": "limo-chat.tsx"
    },
    "/medical-records": {
      "filePath": "medical-records.tsx"
    },
    "/medications": {
      "filePath": "medications.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
